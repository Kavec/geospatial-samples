#!/usr/bin/env python

import sys
import time
import argparse

import tornado.ioloop
import tornado.web

g_outfile = None

class QueryHandler(tornado.web.RequestHandler):
    def post(self):
        g_outfile.write(self.request.body + '\n')
        self.write("OK")

class HelpfulParser(argparse.ArgumentParser):
    """Prints usage when an error is encountered"""
    def error(self, message):
        sys.stderr.write('error: %s\n' % (message,))
        self.print_help()
        sys.exit(2)
    
def process_args():
    parser = HelpfulParser(
        add_help=False,
        formatter_class=argparse.ArgumentDefaultsHelpFormatter)
    parser.add_argument('-u', '--usage', action="help",
                        help="show this help message and exit")
    parser.add_argument("-p", "--port", type=int, dest='port',
                        default=8888, help="listen on port")
    parser.add_argument("-o", "--outfile", type=str, dest='outfile',
                        help="output file")
    return parser.parse_args()
        
if __name__ == "__main__":
    args = process_args()
    
    if args.outfile:
        g_outfile = open(args.outfile, 'a')
    else:
        g_outfile = sys.stdout

    app = tornado.web.Application([
        (r"/web/(.*)", tornado.web.StaticFileHandler, {"path": "./html/"}),
        (r"/query", QueryHandler),
    ])
    app.listen(args.port)
    tornado.ioloop.IOLoop.current().start()
